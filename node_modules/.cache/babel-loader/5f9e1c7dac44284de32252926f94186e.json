{"ast":null,"code":"var _jsxFileName = \"/Users/wes/Projects/Programming/Week13/strangers-things/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updatePost } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    posts,\n    token\n  } = _ref;\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newDescription, setNewDesc] = useState(description);\n  const [newLocation, setNewLocation] = useState(location);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n  async function editPost() {\n    const updatedPost = {\n      token: token,\n      title: newTitle,\n      description: newDescription,\n      location: newLocation,\n      price: newPrice,\n      willDeliver: newWillDeliver,\n      _id: postID\n    };\n    await updatePost(updatedPost);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: ev => {\n      ev.preventDefault();\n      editPost();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"createTitle\",\n      type: \"text\",\n      placeholder: title,\n      onChange: ev => setNewTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"createDescription\",\n      type: \"text\",\n      placeholder: description,\n      onChange: ev => setNewDesc(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"createLocation\",\n      type: \"text\",\n      placeholder: location,\n      onChange: ev => setNewLocation(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"createPrice\",\n      type: \"text\",\n      placeholder: price,\n      onChange: ev => setNewPrice(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"createWD\",\n      type: \"checkbox\",\n      checked: newWillDeliver,\n      onChange: ev => setNewWillDeliver(ev.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"4pnDRmpzdoMl3NGR2MATx2Kmag0=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useParams","updatePost","EditPost","posts","token","postID","currentPost","filter","post","_id","title","description","location","price","willDeliver","newTitle","setNewTitle","newDescription","setNewDesc","newLocation","setNewLocation","newPrice","setNewPrice","newWillDeliver","setNewWillDeliver","editPost","updatedPost","ev","preventDefault","target","value","checked"],"sources":["/Users/wes/Projects/Programming/Week13/strangers-things/src/components/EditPost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updatePost } from '../api';\n\nconst EditPost = ({ posts, token }) => {\n  const { postID } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {title, description, location, price, willDeliver} = currentPost;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newDescription, setNewDesc] = useState(description);\n  const [newLocation, setNewLocation] = useState(location);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n  \n  async function editPost() {\n    const updatedPost = {\n      token: token,\n      title: newTitle,\n      description: newDescription,\n      location: newLocation,\n      price: newPrice,\n      willDeliver: newWillDeliver,\n      _id: postID\n    }\n    await updatePost(updatedPost)\n  }\n  \n  \n  return (\n    <form onSubmit={ (ev) => {\n      ev.preventDefault();\n      editPost();\n      \n    }}>\n      <input \n        id='createTitle'\n        type='text'\n        placeholder={title}\n        onChange={(ev) => setNewTitle(ev.target.value)}\n      />\n      <input \n        id='createDescription'\n        type='text'\n        placeholder={description}\n        onChange={(ev) => setNewDesc(ev.target.value)}\n      />\n      <input \n        id='createLocation'\n        type='text'\n        placeholder={location}\n        onChange={(ev) => setNewLocation(ev.target.value)}\n      />\n      <input \n        id='createPrice'\n        type='text'\n        placeholder={price}\n        onChange={(ev) => setNewPrice(ev.target.value)}\n      />\n      <input \n        id='createWD'\n        type='checkbox'\n        checked={newWillDeliver}\n        onChange={(ev) => setNewWillDeliver(ev.target.checked)}\n      />\n      <button type='submit'>Edit Post</button>\n    </form>\n  )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
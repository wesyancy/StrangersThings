{"ast":null,"code":"var _jsxFileName = \"/Users/wes/Projects/Programming/Week13/strangers-things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    posts,\n    token\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n\n  function postMatches(post, text) {\n    if (!searchTerm.toLowerCase()) return true;\n    return post.title.toLowerCase().includes(text) || post.description.toLowerCase().includes(text) || post.price.toLowerCase().includes(text) || post.location.toLowerCase().includes(text);\n  }\n\n  const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n  useEffect(() => {// force repaint\n  }, [searchTerm]);\n  useEffect(() => {// force repaint\n  }, [posts]);\n\n  const parseMessages = async () => {\n    return postsToDisplay.map(post => {\n      const {\n        description,\n        location,\n        price,\n        title,\n        _id,\n        isAuthor,\n        willDeliver\n      } = post;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"singlePost\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Will Deliver: \", willDeliver ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), isAuthor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/${_id}`,\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/edit-post/${_id}`,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/posts/${_id}`,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"outer div element\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: ev => setSearchTerm(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"postItemButton\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/posts/create-post\",\n        children: \"Post an Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login to post an item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), parseMessages()\n    /* {\n      postsToDisplay.map((post) => {\n        const { description, location, price, title, _id, isAuthor, willDeliver } = post;\n        return (\n          <div id='singlePost' key={_id}>\n            <h3>{title}</h3>\n            <p>Description: {description}</p>\n            <p>Price: {price}</p>\n            <p>Location: {location}</p>\n            <p>Will Deliver: {willDeliver ? 'Yes': 'No'}</p>\n            {\n              isAuthor ? (\n                <>\n                  <button><Link to={`/posts/${_id}`}>View</Link></button>\n                  <button><Link to={`/posts/edit-post/${_id}`}>Edit</Link></button>\n                </>\n              ) : (\n                <button><Link to={`/posts/${_id}`}>View</Link></button>\n              )\n            }\n          </div>\n        )\n      })\n    } */\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"zhdowNODA64uhuNeWDzLXBlaIjA=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Link","Posts","posts","token","searchTerm","setSearchTerm","postMatches","post","text","toLowerCase","title","includes","description","price","location","filteredPosts","filter","postsToDisplay","length","parseMessages","map","_id","isAuthor","willDeliver","ev","target","value"],"sources":["/Users/wes/Projects/Programming/Week13/strangers-things/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Posts = ({ posts, token }) => {\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  function postMatches(post, text) {\n  \n    if (!searchTerm.toLowerCase()) return true;\n\n    return (\n      post.title.toLowerCase().includes(text) ||\n      post.description.toLowerCase().includes(text) ||\n      post.price.toLowerCase().includes(text) ||\n      post.location.toLowerCase().includes(text)\n    )\n  }\n\n  const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n  useEffect(() => {\n    // force repaint\n  }, [searchTerm])\n\n  useEffect(() => {\n    // force repaint\n  }, [posts])\n\n  const parseMessages = async () => {\n    return postsToDisplay.map((post) => {\n          const { description, location, price, title, _id, isAuthor, willDeliver } = post;\n          return (\n            <div id='singlePost' key={_id}>\n              <h3>{title}</h3>\n              <p>Description: {description}</p>\n              <p>Price: {price}</p>\n              <p>Location: {location}</p>\n              <p>Will Deliver: {willDeliver ? 'Yes': 'No'}</p>\n              {\n                isAuthor ? (\n                  <>\n                    <button><Link to={`/posts/${_id}`}>View</Link></button>\n                    <button><Link to={`/posts/edit-post/${_id}`}>Edit</Link></button>\n                  </>\n                ) : (\n                  <button><Link to={`/posts/${_id}`}>View</Link></button>\n                )\n              }\n            </div>\n          )\n        })\n  }\n\n  return (\n\n\n    <div id='outer div element'>\n      \n      <input\n        id='searchBar'\n        type='text'\n        placeholder='search'\n        onChange={(ev) => setSearchTerm(ev.target.value)}\n      />\n\n      <br></br>\n\n      { token ? \n        (\n          <button id='postItemButton'>\n            <Link to='/posts/create-post'>Post an Item</Link>\n          </button>\n        ) \n        : \n        (\n          <h3>Login to post an item</h3>\n        )\n      }\n\n      {\n      parseMessages()\n      \n      /* {\n        postsToDisplay.map((post) => {\n          const { description, location, price, title, _id, isAuthor, willDeliver } = post;\n          return (\n            <div id='singlePost' key={_id}>\n              <h3>{title}</h3>\n              <p>Description: {description}</p>\n              <p>Price: {price}</p>\n              <p>Location: {location}</p>\n              <p>Will Deliver: {willDeliver ? 'Yes': 'No'}</p>\n              {\n                isAuthor ? (\n                  <>\n                    <button><Link to={`/posts/${_id}`}>View</Link></button>\n                    <button><Link to={`/posts/edit-post/${_id}`}>Edit</Link></button>\n                  </>\n                ) : (\n                  <button><Link to={`/posts/${_id}`}>View</Link></button>\n                )\n              }\n            </div>\n          )\n        })\n      } */}\n    </div>\n  )\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
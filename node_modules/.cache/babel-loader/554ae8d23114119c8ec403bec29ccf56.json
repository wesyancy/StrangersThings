{"ast":null,"code":"var _jsxFileName = \"/Users/wes/Projects/Programming/Week13/strangers-things/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deletePost } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    user,\n    token,\n    _id\n  } = _ref;\n  const messages = user.messages;\n  const posts = user.posts;\n  const userID = user._id;\n  useEffect(() => {// console.log('refresh');\n  }, [user, deletePost]); // console.log(user)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), posts && posts.map(post => {\n        // const fromUserID = posts.fromUser._id\n        // const {username} = posts.fromUser;\n        const title = post.title;\n        const price = post.price;\n        const description = post.description;\n        const location = post.location;\n        const willDeliver = post.willDeliver;\n\n        if (post.active === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Title: \", title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Will Deliver: \", willDeliver]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/posts/${_id}`,\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/posts/edit-post/${_id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deletePost(token, post._id);\n              },\n              children: \"Delete this post?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messages Received\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), messages && messages.map(message => {\n        const fromUserID = message.fromUser._id;\n        const {\n          username\n        } = message.fromUser;\n        const {\n          title\n        } = message.post;\n\n        if (userID !== fromUserID) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"From User: \", username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Message: \", message.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Post Reference: \", title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messages Sent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), messages && messages.map(message => {\n        const fromUserID = message.fromUser._id;\n        const {\n          username\n        } = message.fromUser;\n        const {\n          title\n        } = message.post;\n\n        if (userID === fromUserID) {\n          console.log(messages, message);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"From User: \", username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Message: \", message.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Post Reference: \", title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","Link","deletePost","Profile","user","token","_id","messages","posts","userID","map","post","title","price","description","location","willDeliver","active","message","fromUserID","fromUser","username","content","console","log"],"sources":["/Users/wes/Projects/Programming/Week13/strangers-things/src/components/Profile.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deletePost } from '../api';\n\nconst Profile = ({ user, token, _id }) => {\n  const messages = user.messages;\n  const posts = user.posts;\n  const userID = user._id;\n\n  useEffect(() => {\n    // console.log('refresh');\n\n  }, [user, deletePost])\n\n  // console.log(user)\n\n  return (\n    <div>\n\n      <div>\n        <h1>Your Posts</h1>\n        {\n          posts && posts.map(post => {\n            // const fromUserID = posts.fromUser._id\n            // const {username} = posts.fromUser;\n            const title = post.title;\n            const price = post.price;\n            const description = post.description;\n            const location = post.location;\n            const willDeliver = post.willDeliver;\n\n            if (post.active === true) {\n              return (\n\n                <div key={post._id}>\n                  <p>Title: {title}</p>\n                  <p>Description: {description}</p>\n                  <p>Price: {price}</p>\n                  <p>Location: {location}</p>\n                  <p>Will Deliver: {willDeliver}</p>\n                  <button><Link to={`/posts/${_id}`}>View</Link></button>\n                  <button><Link to={`/posts/edit-post/${_id}`}>Edit</Link></button>\n                  <button onClick={() => {\n                    deletePost(token, post._id)\n                  }}>Delete this post?</button>\n                </div>\n\n              )\n            }\n          })\n        }\n      </div>\n\n      <div>\n        <h1>Messages Received</h1>\n        {\n          messages && messages.map(message => {\n\n            const fromUserID = message.fromUser._id;\n            const { username } = message.fromUser;\n            const { title } = message.post;\n\n            if (userID !== fromUserID) {\n\n              return (\n\n                <div key={message._id}>\n                  <p>From User: {username} </p>\n                  <p>Message: {message.content}</p>\n                  <p>Post Reference: {title}</p>\n                </div>\n\n              )\n            }\n          })\n        }\n\n      </div>\n\n      <div>\n        <h1>Messages Sent</h1>\n        {\n          messages && messages.map(message => {\n\n            const fromUserID = message.fromUser._id;\n            const { username } = message.fromUser;\n            const { title } = message.post;\n\n            if (userID === fromUserID) {\n\n              console.log (messages, message)\n\n              return (\n\n                <div key={message._id}>\n                  <p>From User: {username} </p>\n                  <p>Message: {message.content}</p>\n                  <p>Post Reference: {title}</p>\n                </div>\n\n              )\n            }\n          })\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Profile;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
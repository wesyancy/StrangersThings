{"ast":null,"code":"var _jsxFileName = \"/Users/wes/Projects/Programming/Week13/strangers-things/src/components/SinglePostView.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { createMessage } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendMessage = _ref => {\n  _s();\n\n  let {\n    postID,\n    token,\n    navigate\n  } = _ref;\n  const [message, setMessage] = useState({\n    content: ''\n  }); // we need 3 things to make this request\n  // Post-id, token, message object containing the content of the message\n\n  async function addMessage() {\n    await createMessage({\n      postID,\n      message,\n      token\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: ev => {\n      ev.preventDefault();\n      addMessage();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Message\",\n      onChange: ev => setMessage({\n        content: ev.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: navigate(`/posts`),\n      type: \"submit\",\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SendMessage, \"zHW6lT0cCxeljI9xD7SfiFFsqis=\");\n\n_c = SendMessage;\n\nconst SinglePostView = _ref2 => {\n  _s2();\n\n  let {\n    posts,\n    token\n  } = _ref2;\n  const [activateMessage, setActivateMessage] = useState(false);\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Will Deliver: \", willDeliver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActivateMessage(!activateMessage),\n      children: \"Message this user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Log in to message user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), activateMessage && /*#__PURE__*/_jsxDEV(SendMessage, {\n      postID: postID,\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SinglePostView, \"SaCcpfA+IAwaFepjA28zt0MOekY=\", false, function () {\n  return [useParams];\n});\n\n_c2 = SinglePostView;\nexport default SinglePostView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SendMessage\");\n$RefreshReg$(_c2, \"SinglePostView\");","map":{"version":3,"names":["React","useState","useParams","createMessage","SendMessage","postID","token","navigate","message","setMessage","content","addMessage","ev","preventDefault","target","value","SinglePostView","posts","activateMessage","setActivateMessage","currentPost","filter","post","_id","title","description","location","price","willDeliver"],"sources":["/Users/wes/Projects/Programming/Week13/strangers-things/src/components/SinglePostView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { createMessage } from '../api';\n\nconst SendMessage = ({ postID, token, navigate }) => {\n  const [message, setMessage] = useState({content: ''});\n  // we need 3 things to make this request\n    // Post-id, token, message object containing the content of the message\n    \n  async function addMessage() {\n    await createMessage({postID, message, token})\n  }\n  \n  return (\n    <form onSubmit={ (ev)=> {\n      ev.preventDefault();\n      addMessage();\n    }}>\n      <input\n        type='text'\n        placeholder='Enter Message'\n        onChange={ (ev) => setMessage({content: ev.target.value}) }\n      />\n      <button onClick={navigate(`/posts`)} type='submit'>Send Message</button>\n    </form>\n  )\n}\n\nconst SinglePostView = ({ posts, token }) => {\n  const [activateMessage, setActivateMessage] = useState(false);\n  \n  const { postID } = useParams();\n  \n  const [currentPost] = posts.filter(post => post._id === postID);\n  \n  const {title, description, location, price, willDeliver} = currentPost;\n  \n  return (\n    <div>\n      <div>\n        <h3>{title}</h3>\n        <p>Description: {description}</p>\n        <p>Price: {price}</p>\n        <p>Location: {location}</p>\n        <p>Will Deliver: {willDeliver}</p>\n      </div>\n      {\n      token ? \n      (\n      <button onClick={() => setActivateMessage(!activateMessage)}>Message this user</button>\n      ) : (\n      <h3>Log in to message user</h3>\n      )\n      }\n      \n      {\n      activateMessage && <SendMessage postID={postID} token={token}/>\n      }\n    </div>\n  )\n}\n\nexport default SinglePostView;"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,QAA9B;;;AAEA,MAAMC,WAAW,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAAEC,MAAF;IAAUC,KAAV;IAAiBC;EAAjB,CAAgC;EACnD,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC;IAACS,OAAO,EAAE;EAAV,CAAD,CAAtC,CADmD,CAEnD;EACE;;EAEF,eAAeC,UAAf,GAA4B;IAC1B,MAAMR,aAAa,CAAC;MAACE,MAAD;MAASG,OAAT;MAAkBF;IAAlB,CAAD,CAAnB;EACD;;EAED,oBACE;IAAM,QAAQ,EAAIM,EAAD,IAAO;MACtBA,EAAE,CAACC,cAAH;MACAF,UAAU;IACX,CAHD;IAAA,wBAIE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,eAFd;MAGE,QAAQ,EAAIC,EAAD,IAAQH,UAAU,CAAC;QAACC,OAAO,EAAEE,EAAE,CAACE,MAAH,CAAUC;MAApB,CAAD;IAH/B;MAAA;MAAA;MAAA;IAAA,QAJF,eASE;MAAQ,OAAO,EAAER,QAAQ,CAAE,QAAF,CAAzB;MAAqC,IAAI,EAAC,QAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAtBD;;GAAMH,W;;KAAAA,W;;AAwBN,MAAMY,cAAc,GAAG,SAAsB;EAAA;;EAAA,IAArB;IAAEC,KAAF;IAASX;EAAT,CAAqB;EAC3C,MAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,KAAD,CAAtD;EAEA,MAAM;IAAEI;EAAF,IAAaH,SAAS,EAA5B;EAEA,MAAM,CAACkB,WAAD,IAAgBH,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAalB,MAAlC,CAAtB;EAEA,MAAM;IAACmB,KAAD;IAAQC,WAAR;IAAqBC,QAArB;IAA+BC,KAA/B;IAAsCC;EAAtC,IAAqDR,WAA3D;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA,UAAKI;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,4BAAiBC,WAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,sBAAWE,KAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,yBAAcD,QAAd;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,6BAAkBE,WAAlB;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EASEtB,KAAK,gBAEL;MAAQ,OAAO,EAAE,MAAMa,kBAAkB,CAAC,CAACD,eAAF,CAAzC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFK,gBAIL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF,EAkBEA,eAAe,iBAAI,QAAC,WAAD;MAAa,MAAM,EAAEb,MAArB;MAA6B,KAAK,EAAEC;IAApC;MAAA;MAAA;MAAA;IAAA,QAlBrB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAhCD;;IAAMU,c;UAGed,S;;;MAHfc,c;AAkCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/wes/Projects/Programming/Week13/strangers-things/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deletePost } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    user,\n    token,\n    _id,\n    fetchPosts\n  } = _ref;\n  const messages = user.messages;\n  const posts = user.posts;\n  const userID = user._id;\n  useEffect(() => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), posts && posts.map(post => {\n          // const fromUserID = posts.fromUser._id\n          // const {username} = posts.fromUser;\n          const title = post.title;\n          const price = post.price;\n          const description = post.description;\n          const location = post.location;\n          const willDeliver = post.willDeliver;\n\n          if (post.active === true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Title: \", title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Description: \", description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Price: \", price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Location: \", location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Will Deliver: \", willDeliver]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/posts/${_id}`,\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/posts/edit-post/${_id}`,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  deletePost(token, post._id);\n                  console.log('hello');\n                },\n                children: \"Delete this post?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)]\n            }, post._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Messages Received\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), messages && messages.map(message => {\n          const fromUserID = message.fromUser._id;\n          const {\n            username\n          } = message.fromUser;\n          const {\n            title\n          } = message.post;\n\n          if (userID !== fromUserID) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"From User: \", username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Message: \", message.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Post Reference: \", title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)]\n            }, message._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Messages Sent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), messages && messages.map(message => {\n          const fromUserID = message.fromUser._id;\n          const {\n            username\n          } = message.fromUser;\n          const {\n            title\n          } = message.post;\n\n          if (userID === fromUserID) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"From User: \", username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Message: \", message.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Post Reference: \", title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, message._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this);\n  }, [user, deletePost]);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","Link","deletePost","Profile","user","token","_id","fetchPosts","messages","posts","userID","map","post","title","price","description","location","willDeliver","active","console","log","message","fromUserID","fromUser","username","content"],"sources":["/Users/wes/Projects/Programming/Week13/strangers-things/src/components/Profile.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deletePost } from '../api';\n\nconst Profile = ({ user, token, _id, fetchPosts }) => {\n  const messages = user.messages;\n  const posts = user.posts;\n  const userID = user._id;\n\n  useEffect(() => {\n    \n  return (\n    <div>\n\n      <div>\n        <h1>Your Posts</h1>\n        {\n          posts && posts.map(post => {\n            // const fromUserID = posts.fromUser._id\n            // const {username} = posts.fromUser;\n            const title = post.title;\n            const price = post.price;\n            const description = post.description;\n            const location = post.location;\n            const willDeliver = post.willDeliver;\n\n            if (post.active === true) {\n            return (\n              \n              <div key={post._id}>\n                <p>Title: {title}</p>\n                <p>Description: {description}</p>\n                <p>Price: {price}</p>\n                <p>Location: {location}</p>\n                <p>Will Deliver: {willDeliver}</p>\n                <button><Link to={`/posts/${_id}`}>View</Link></button>\n                <button><Link to={`/posts/edit-post/${_id}`}>Edit</Link></button>\n                <button onClick={() => {\n                  deletePost(token, post._id) \n                  console.log('hello')\n                  }}>Delete this post?</button>\n              </div>\n\n            )}\n          })\n        }\n      </div>\n\n      <div>\n        <h1>Messages Received</h1>\n        {\n          messages && messages.map(message => {\n\n            const fromUserID = message.fromUser._id;\n            const { username } = message.fromUser;\n            const { title } = message.post;\n\n            if (userID !== fromUserID) {\n              return (\n\n                <div key={message._id}>\n                  <p>From User: {username} </p>\n                  <p>Message: {message.content}</p>\n                  <p>Post Reference: {title}</p>\n                </div>\n\n              )\n            }\n          })\n        }\n\n      </div>\n\n      <div>\n        <h1>Messages Sent</h1>\n        {\n          messages && messages.map(message => {\n            const fromUserID = message.fromUser._id;\n            const { username } = message.fromUser;\n            const { title } = message.post;\n\n            if (userID === fromUserID) {\n              return (\n                <div key={message._id}>\n                  <p>From User: {username} </p>\n                  <p>Message: {message.content}</p>\n                  <p>Post Reference: {title}</p>\n                </div>\n              )\n            }\n          })\n        }\n      </div>\n\n    </div>\n  )\n\n}, [user, deletePost])\n\n}\n\nexport default Profile;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const baseURL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-PT';\nexport const getPosts = async () => {\n  try {\n    const response = await fetch(`${baseURL}/posts`);\n    const results = response.json();\n    return results;\n  } catch (ex) {\n    console.log('error getting all posts');\n  }\n};\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log('error registering user');\n  }\n};","map":{"version":3,"names":["baseURL","getPosts","response","fetch","results","json","ex","console","log","registerUser","username","password","method","headers","body","JSON","stringify","user","result","error"],"sources":["/Users/wes/Projects/Programming/Week13/strangers-things/src/api/index.js"],"sourcesContent":["const baseURL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-PT'\n\nexport const getPosts = async () => {\n\n    try {\n\n        const response = await fetch(`${baseURL}/posts`);\n        const results = response.json();\n        return (results)\n\n    } catch (ex) {\n\n        console.log('error getting all posts')\n\n    }\n\n}\n\nexport const registerUser = async (username, password) => {\n\n    try {\n        const response = await fetch(`${baseURL}/users/register`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password\n                }\n            })\n        })\n        const result = await response.json();\n        return result;\n    }\n    catch (error) {\n        console.log('error registering user')\n    }\n\n}\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+DAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;EAEhC,IAAI;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,QAAZ,CAA5B;IACA,MAAMI,OAAO,GAAGF,QAAQ,CAACG,IAAT,EAAhB;IACA,OAAQD,OAAR;EAEH,CAND,CAME,OAAOE,EAAP,EAAW;IAETC,OAAO,CAACC,GAAR,CAAY,yBAAZ;EAEH;AAEJ,CAdM;AAgBP,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAEtD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,iBAAZ,EAA8B;MACtDY,MAAM,EAAE,MAD8C;MAEtDC,OAAO,EAAE;QACL,gBAAgB;MADX,CAF6C;MAKtDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBC,IAAI,EAAE;UACFP,QAAQ,EAAEA,QADR;UAEFC,QAAQ,EAAEA;QAFR;MADW,CAAf;IALgD,CAA9B,CAA5B;IAYA,MAAMO,MAAM,GAAG,MAAMhB,QAAQ,CAACG,IAAT,EAArB;IACA,OAAOa,MAAP;EACH,CAfD,CAgBA,OAAOC,KAAP,EAAc;IACVZ,OAAO,CAACC,GAAR,CAAY,wBAAZ;EACH;AAEJ,CAtBM"},"metadata":{},"sourceType":"module"}